---
- name: Add PPA for nginx
  apt_repository:
    repo: 'ppa:nginx/stable'
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Add deb to apt-sources for nginx
  apt_repository:
    repo: '{{ item }}'
    state: present
  with_items:
    - 'deb http://nginx.org/packages/debian/ {{ ansible_distribution_release }} nginx'
    - 'deb-src http://nginx.org/packages/debian/ {{ ansible_distribution_release }} nginx'
  when: ansible_distribution == 'Debian'

- name: Add signing key for nginx repo
  apt_key: 
    url: http://nginx.org/keys/nginx_signing.key 
    state: present
  when: ansible_distribution == 'Debian'

- name: Run apt-get update (essentially)
  apt:
    update_cache: yes

- name: Install nginx
  apt:
    name: nginx
    state: present

- name: Make sure nginx is not running
  service:
    name: nginx
    state: stopped
    enabled: no

- name: Create Group for nginx
  group:
    name: "{{ nginx_group_name }}"
    state: present

- name: Create User for nginx
  user:
    name: "{{ nginx_user_name }}"
    groups: "{{ nginx_group_name }}"
    append: yes

- name: Create nginx log directory
  file:
    path: "{{ nginx_log_dir }}"
    state: directory
    owner: "{{ nginx_user_name }}"
    group: "{{ nginx_group_name }}"
    mode: 0775

- name: Create nginx configuration directory
  file:
    path: "{{ nginx_config_dir }}"
    state: directory
    owner: "{{ nginx_user_name }}"
    group: "{{ nginx_group_name }}"
    mode: 0775

- name: Copy nginx configuration in place.
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_config_dir }}/nginx.conf"
    owner: "{{ nginx_user_name }}"
    group: "{{ nginx_group_name }}"
    mode: 0644
  notify:
    - reload nginx

- name: Install nginx supervisord script
  template: 
    src: supervisor_nginx.conf.j2
    dest: "{{ supervisord_config_dir }}/conf.d/nginx.conf" 
    owner: "{{ supervisord_user_name }}"
    group: "{{ supervisord_group_name }}"
    mode: 0777 
  notify: restart nginx
