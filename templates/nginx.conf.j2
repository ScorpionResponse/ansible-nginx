# nginx.conf {{ inventory_hostname }}

worker_processes {{ nginx_worker_processes }};

user {{ nginx_user_name }};
pid /var/run/nginx.pid;
error_log {{ nginx_log_dir }}/error.log;

events {
    worker_connections 512;
    accept_mutex off;
}

http {
    include mime.types;
    default_type application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log {{ nginx_log_dir }}/access.log;
    sendfile on;

    upstream app_server {
        server unix:/var/run/gunicorn/gunicorn.socket fail_timeout=0;
    }

    server {
        listen {{ nginx_listen_port }} default;
        client_max_body_size 4G;
        server_name {{ nginx_server_name }};
        charset utf-8;

        #listen   443;
        #ssl    on;
        #ssl_certificate    {{ nginx_application_dir }}/letsencrypt/cert.pem;
        #ssl_certificate_key    {{ nginx_application_dir }}/letsencrypt/cert.key;

        keepalive_timeout 5;

        location /nginx_status {
            stub_status on;
            access_log   off;
            allow 127.0.0.1;
            deny all;
        }
        
        location /static {
            alias {{ nginx_application_dir }}/static;
            {% if nginx_hashed_static_files %}
            if ($uri ~* ".*\.[a-f0-9]{12,}\.(css|js|png|jpg|jpeg|gif|swf|ico)" ) {
                expires {{ nginx_hashed_static_files_expires }};
            } else {
                expires {{ nginx_static_files_expires }};
            }
            {% else %}
            expires {{ nginx_static_files_expires }};
            {% endif %}
        }

        location /media {
            alias {{ nginx_application_dir }}/media;
        }

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_redirect off;

            proxy_pass   http://app_server;
        }
    }
}
